export const lockManager = [{ inputs: [{ internalType: "contract ContractRegistry", name: "contractRegistry", type: "address" }], stateMutability: "nonpayable", type: "constructor" }, { inputs: [], name: "ContractPaused", type: "error" }, { inputs: [], name: "NoRewardTokensSet", type: "error" }, { inputs: [{ internalType: "address", name: "owner", type: "address" }], name: "OwnableInvalidOwner", type: "error" }, { inputs: [{ internalType: "address", name: "account", type: "address" }], name: "OwnableUnauthorizedAccount", type: "error" }, { inputs: [], name: "TransferFailed", type: "error" }, { inputs: [], name: "TransferFailed", type: "error" }, { inputs: [], name: "UnauthorizedMint", type: "error" }, { inputs: [{ internalType: "string", name: "name", type: "string" }], name: "ZeroAddress", type: "error" }, { inputs: [], name: "ZeroRegistryAddress", type: "error" }, { anonymous: false, inputs: [{ indexed: true, internalType: "address", name: "previousOwner", type: "address" }, { indexed: true, internalType: "address", name: "newOwner", type: "address" }], name: "OwnershipTransferred", type: "event" }, { anonymous: false, inputs: [{ indexed: false, internalType: "uint256", name: "amount", type: "uint256" }], name: "RewardsClaim", type: "event" }, { inputs: [{ internalType: "address", name: "token", type: "address" }], name: "addRewardsToken", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [], name: "compound", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "user", type: "address" }], name: "getUserUnlockingSchedule", outputs: [{ components: [{ internalType: "uint256", name: "startTime", type: "uint256" }, { internalType: "uint256", name: "endTime", type: "uint256" }, { internalType: "uint256", name: "amountInCoolDown", type: "uint256" }], internalType: "struct IVL_MGP.UserUnlocking[]", name: "", type: "tuple[]" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint256", name: "amount", type: "uint256" }], name: "lock", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [], name: "owner", outputs: [{ internalType: "address", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "uint256", name: "", type: "uint256" }], name: "pendingBonds", outputs: [{ internalType: "contract bMGP", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [], name: "registry", outputs: [{ internalType: "contract ContractRegistry", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "token", type: "address" }], name: "removeRewardsToken", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [], name: "renounceOwnership", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "token", type: "address" }, { internalType: "address", name: "to", type: "address" }, { internalType: "uint256", name: "amount", type: "uint256" }], name: "rescueTokens", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "uint256", name: "", type: "uint256" }], name: "rewardTokens", outputs: [{ internalType: "address", name: "", type: "address" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "_registry", type: "address" }], name: "setContractRegistry", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "bool", name: "_paused", type: "bool" }], name: "setPaused", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "contract bMGP", name: "bond", type: "address" }], name: "startUnlock", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "newOwner", type: "address" }], name: "transferOwnership", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "uint256", name: "slotIndex", type: "uint256" }], name: "unlock", outputs: [], stateMutability: "nonpayable", type: "function" }] as const;
